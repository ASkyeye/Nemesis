apiVersion: batch/v1
kind: Job
metadata:
  name: tls-cert-generator-job
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      serviceAccountName: secret-manager
      containers:
      - name: tls-generator
        image: bitnami/kubectl:latest
        command: ["/bin/sh", "/scripts/generate-and-apply-tls.sh"]
        volumeMounts:
        - name: script-volume
          mountPath: /scripts
      restartPolicy: Never
      volumes:
      - name: script-volume
        configMap:
          name: tls-cert-generator-script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tls-cert-generator-script
data:
  generate-and-apply-tls.sh: |
    #!/bin/sh
    set -e  # Exit immediately if a command exits with a non-zero status.

    # Generate TLS certificate and key
    openssl req -x509 -newkey rsa:4096 -sha256 -nodes -keyout /tmp/tls.key -out /tmp/tls.crt -subj "/CN=nemesis.local" -days 365 -addext "subjectAltName=DNS:nemesis.local"

    # Create the secret in the target namespace
    kubectl create secret tls nemesis-ingress-tls --cert=/tmp/tls.crt --key=/tmp/tls.key -n {{ .Release.Namespace }} || true

    # Create the secret in the monitoring namespace
    kubectl create secret tls nemesis-ingress-tls --cert=/tmp/tls.crt --key=/tmp/tls.key -n monitoring || true