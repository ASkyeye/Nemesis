#
# Common helpers used across various Nemesis code.
#

# Standard Libraries
import os
import structlog
from typing import List


logger = structlog.get_logger(module=__name__)


def getEnvVar(name: str) -> str:
    val = os.environ.get(name)
    if val is None:
        raise Exception(f"{name} environment variable not set.")
    return val



async def scan_for_dpapi_blob(input: bytes) -> bool:
    """Scans input bytes for DPAPI blobs, returning true if any are present."""

    dpapi_signatures = [
        b"\x01\x00\x00\x00\xD0\x8C\x9D\xDF\x01\x15\xD1\x11\x8C\x7A\x00\xC0\x4F\xC2\x97\xEB",
        # The following are potential base64 representations of the DPAPI provider GUID
        #   Generated by putting dpapiProviderGuid into the script here: https://www.leeholmes.com/blog/2017/09/21/searching-for-content-in-base-64-strings/
        b"AAAA0Iyd3wEV0RGMegDAT8KX6",
        b"AQAAANCMnd8BFdERjHoAwE/Cl+",
        b"EAAADQjJ3fARXREYx6AMBPwpfr"
    ]

    for dpapi_signature in dpapi_signatures:
        if input.find(dpapi_signature) != -1:
            return True

    return False
